"use strict";$(".accordion__btn").click((function(){$(this).siblings(".accordion__text").slideToggle(200),$(this).toggleClass("opened")})),$(".forms__button-item--example .forms__btn").on("click",(function(){var e=$(this);e.addClass("loading"),e.attr("disabled","true"),setTimeout((function(){e.removeClass("loading"),e.addClass("success")}),2e3),setTimeout((function(){e.removeClass("success"),e.removeAttr("disabled")}),4e3)})),function(){var e=!1;$(".checkbox").mouseup((function(t){e=!0,$(this).find(".checkbox__input").removeClass("focused")})),$(".checkbox__input").focus((function(t){e||$(this).addClass("focused"),e=!1})),$(".checkbox__input").blur((function(e){$(this).removeClass("focused")}))}(),function(e){"function"==typeof define&&define.amd?define(["../widgets/datepicker"],e):e(jQuery.datepicker)}((function(e){return e.regional.ru={closeText:"Закрыть",prevText:"&#x3C;Пред",nextText:"След&#x3E;",currentText:"Сегодня",monthNames:["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],monthNamesShort:["Янв","Фев","Мар","Апр","Май","Июн","Июл","Авг","Сен","Окт","Ноя","Дек"],dayNames:["воскресенье","понедельник","вторник","среда","четверг","пятница","суббота"],dayNamesShort:["вск","пнд","втр","срд","чтв","птн","сбт"],dayNamesMin:["Вс","Пн","Вт","Ср","Чт","Пт","Сб"],weekHeader:"Нед",dateFormat:"dd.mm.yy",firstDay:1,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},e.setDefaults(e.regional.ru),e.regional.ru})),$(".dropdown:not(.dropdown-opened").select2({minimumResultsForSearch:1/0,dropdownCssClass:["calendar-dropdown"]}),$(".dropdown-opened").select2({minimumResultsForSearch:1/0,dropdownCssClass:["calendar-dropdown","calendar-dropdown-permanent"]}).on("select2:closing",(function(e){e.preventDefault()})).on("select2:closed",(function(e){list.select2("open")})),$(".dropdown").on("select2:close",(function(){$(this).next().find(".select2-selection").blur()})),$(".dropdown + .select2 .select2-selection__rendered").attr("tabindex","-1"),$(".dropdown-opened").select2("open"),$(".hint-positions__tip-icon").on("click",(function(){$(this).next().addClass("show")})),$(".hint__close").on("click",(function(){var e=$(this).parent();e.hasClass("hint-permanent")||e.removeClass("show")})),function(){var e={minimumResultsForSearch:1/0,dropdownCssClass:"calendar-dropdown"};$(".input-date").datepicker({dateFormat:"dd.mm.yy",showOtherMonths:!0,regional:"ru",monthNamesShort:["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],changeMonth:!0,changeYear:!0,yearRange:"1900:+10",beforeShow:function(){setTimeout((function(){$(".ui-datepicker-month").select2(e),$(".ui-datepicker-year").select2(e)}),0)},onChangeMonthYear:function(){setTimeout((function(){$(".ui-datepicker-month").select2(e),$(".ui-datepicker-year").select2(e)}),0)}}),$(".input-date-trigger").datepicker({dateFormat:"dd.mm.yy",showOtherMonths:!0,regional:"ru",monthNamesShort:["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],changeMonth:!0,changeYear:!0,yearRange:"1900:+10",onChangeMonthYear:function(){setTimeout((function(){$(".ui-datepicker-month").select2(e),$(".ui-datepicker-year").select2(e)}),0)},onSelect:function(){setTimeout((function(){$(".ui-datepicker-month").select2(e),$(".ui-datepicker-year").select2(e)}),0)}}),$(".input-date-trigger-single").datepicker({dateFormat:"dd.mm.yy",showOtherMonths:!0,regional:"ru",monthNamesShort:["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],changeMonth:!0,changeYear:!0,yearRange:"1900:+10",onChangeMonthYear:function(){setTimeout((function(){$(".ui-datepicker-month").select2(e),$(".ui-datepicker-year").select2(e)}),0)},onSelect:function(){setTimeout((function(){$(".ui-datepicker-month").select2(e),$(".ui-datepicker-year").select2(e)}),0)}}),$(".input-date-trigger-range").datepicker({range:"period",dateFormat:"dd.mm.yy",showOtherMonths:!0,regional:"ru",monthNamesShort:["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],changeMonth:!0,changeYear:!0,yearRange:"1900:+10",onChangeMonthYear:function(){setTimeout((function(){$(".ui-datepicker-month").select2(e),$(".ui-datepicker-year").select2(e)}),0)},onSelect:function(t,n){console.log(n),setTimeout((function(){$(".input-date-trigger-range").find(".ui-datepicker-month").select2(e),$(".input-date-trigger-range").find(".ui-datepicker-year").select2(e)}),100)},beforeShow:function(e,t){console.log(t)}});var t=moment(),n=t.format("DD"),o=t.format("MM"),s=t.format("YYYY"),i="",a=[],r="";i="15"!==n?"15."+o+"."+s:"17."+o+"."+s,r="13"!==n?"13":"12",a=n>15?["02."+o+"."+s,"11."+o+"."+s]:["17."+o+"."+s,"26."+o+"."+s],$(".input-date-trigger").datepicker("setDate",i),$(".input-date-trigger-single").datepicker("setDate",i),$(".input-date-trigger-range").datepicker("setDate",a),$(".input-date-trigger-single .ui-datepicker-calendar td a").each((function(){$(this).text()===r&&$(this).addClass("hovered")})),$(".ui-datepicker-month").select2(e),$(".ui-datepicker-year").select2(e),$(".input-date").datepicker("refresh"),$(".input-date").inputmask("99.99.9999",{placeholder:"",showMaskOnHover:!1,showMaskOnFocus:!1,jitMasking:!0}),$(".input-date").on("focus",(function(e){var t=$(e.target);0===t.val().length&&t.parent().addClass("date-placeholder")})),$(".input-date").on("blur",(function(e){var t=$(e.target);t.val();t.parent().removeClass("date-placeholder")})),$(".input-date").on("input",(function(e){var t=$(e.target);t.val().length>0?t.parent().removeClass("date-placeholder"):t.parent().addClass("date-placeholder"),moment($(this).val(),"DD.MM.YYYY",!0).isValid()&&($(this).datepicker("hide"),$(this).datepicker("show"))})),$("#calendar-dropdown-month").select2({minimumResultsForSearch:1/0,dropdownCssClass:["calendar-dropdown","calendar-dropdown-permanent"],closeOnSelect:!1}).on("select2:closing",(function(e){e.preventDefault()})).on("select2:closed",(function(e){list.select2("open")})),$("#calendar-dropdown-month").select2("open"),$("#calendar-dropdown-year").select2({minimumResultsForSearch:1/0,dropdownCssClass:["calendar-dropdown","calendar-dropdown-permanent"],closeOnSelect:!1}).on("select2:closing",(function(e){e.preventDefault()})).on("select2:closed",(function(e){list.select2("open")})),$("#calendar-dropdown-year").select2("open")}(),$(".input-password-btn").on("click",(function(){var e=$(this),t=e.prev();e.toggleClass("shown"),e.hasClass("shown")?t.attr("type","text"):t.attr("type","password")})),$('.link[tabindex="-1"]').on("click",(function(e){e.preventDefault()})),$(".input-phone").inputmask("+7(999) 999-99-99"),function(){$(".js-range-single-slider").ionRangeSlider({type:"single",grid:!1,hide_min_max:!0,extra_classes:"single-slider"}),$(".js-range-single-slider-default").ionRangeSlider({type:"single",grid:!1,hide_min_max:!0,hide_from_to:!0,extra_classes:"single-slider"}),$(".js-range-single-slider-hovered").ionRangeSlider({type:"single",grid:!1,hide_min_max:!0,hide_from_to:!0,extra_classes:"single-slider",onStart:function(e){e.slider.find(".irs-handle").addClass("hovered")}}),$(".js-range-single-slider-focused").ionRangeSlider({type:"single",grid:!1,hide_min_max:!0,hide_from_to:!0,extra_classes:"single-slider",onStart:function(e){e.slider.find(".irs-handle").addClass("focused")}}),$(".js-range-double-slider").ionRangeSlider({type:"double",grid:!1,hide_min_max:!0,hide_from_to:!0,extra_classes:"double-slider",onStart:function(e){var t=e.slider.parent(),n=t.siblings(".range__value--from"),o=t.siblings(".range__value--to");n.text(e.from),o.text(e.to)},onChange:function(e){var t=e.slider.parent(),n=t.siblings(".range__value--from"),o=t.siblings(".range__value--to");n.text(e.from),o.text(e.to)}}),$(".js-range-double-slider-hovered").ionRangeSlider({type:"double",grid:!1,hide_min_max:!0,hide_from_to:!0,extra_classes:"double-slider",onStart:function(e){e.slider.find(".irs-handle.to").addClass("hovered")}});var e=!1;$(".irs-line").on("mouseup",(function(){e=!0,$(this).parent().siblings(".irs-handle").removeClass("focused")})),$(".irs-line").on("mousedown",(function(){$(this).parent().siblings(".irs-handle").removeClass("focused")})),$(".irs-handle").on("mouseup",(function(){e=!0,$(this).removeClass("focused")})),$(".irs-handle").on("mousedown",(function(){e=!0,$(this).removeClass("focused")})),$(".irs-line").on("focus",(function(){e||$(this).parent().siblings(".irs-handle").addClass("focused"),e=!1})),$(".irs-line").on("blur",(function(){$(this).parent().siblings(".irs-handle").removeClass("focused")}))}(),function(){var e=document.querySelector(".scroll-to-top"),t=document.querySelector(".header");if(e){var n=function(){return t.getBoundingClientRect().height+50},o=window.pageYOffset>n(),s=function(){!e.classList.contains("active")&&e.classList.add("active")};o&&s(),document.addEventListener("scroll",(function(){!o&&window.pageYOffset>n()&&(s(),o=!0),o&&window.pageYOffset<n()&&(e.classList.contains("active")&&e.classList.remove("active"),o=!1)})),e.addEventListener("click",(function(e){e.preventDefault(),t.scrollIntoView({block:"start",behavior:"smooth"})}))}}(),function(){var e=!1;$(".switcher__label").mouseup((function(t){e=!0,$(this).removeClass("focused")})),$(".switcher__input").focus((function(t){e||$(this).parent().addClass("focused"),e=!1})),$(".switcher__input").blur((function(e){$(this).parent().removeClass("focused")})),$(".switcher-text__label").mouseup((function(t){e=!0,$(this).removeClass("focused")})),$(".switcher-text__input").focus((function(t){e||$(this).parent().addClass("focused"),e=!1})),$(".switcher-text__input").blur((function(e){$(this).parent().removeClass("focused")})),$(".switcher-icon__label").mouseup((function(t){e=!0,$(this).removeClass("focused")}))}(),$(".tabs__button").on("click",(function(){$(this).hasClass("active")||$(this).hasClass("disabled")||($(this).parents(".tabs").find(".tabs__button").removeClass("active"),$(this).addClass("active"))})),function(){var e=!1;$(".toggle").mouseup((function(t){e=!0,$(this).removeClass("focused")})),$(".toggle__input").focus((function(t){e||$(this).parent().addClass("focused"),e=!1})),$(".toggle__input").blur((function(e){$(this).parent().removeClass("focused")}))}(),function(){var e=document.querySelectorAll(".upload");if(e[0]){var t=function(e){if(e.files&&e.files[0]){var t=new FileReader;t.onloadstart=function(t){!function(e){a(e).addClass("loader")}(e),function(e){a(e).find(".upload__name").text(e.files[0].name)}(e),function(e){a(e).addClass("show")}(e)},t.onprogress=function(e){},t.onload=function(t){if(function(e){a(e).removeClass("loader")}(e),function(e){$(e).parent().addClass("hidden")}(e),$(e).parents(".upload").hasClass("multi")){$(".upload__input-wrap .upload__label").length;var n=a(e),o=n.parent(),s=n.clone(!0,!0);s.removeClass("show"),o.prepend(s),n.parents(".upload__input-results").find(".upload__result").each((function(e,t){$(this).attr("data-result",e)}));var i=$(e).parent().parent(),r=$(e).parent(),l=r.clone(!0,!0);l.removeClass("hidden"),i.prepend(l),r.parents(".upload__input-wrap").find(".upload__label").each((function(e,t){$(this).attr("data-input",e),$(this).children("input").attr("name","file-"+e)})),c(l,s)}},t.readAsDataURL(e.files[0])}},n=function(e){t(e.currentTarget),console.log(e.currentTarget)};e.forEach((function(e){var t=$(e).find(".upload__label"),n=$(e).find(".upload__result");$(e).hasClass("disabled")||c(t,n)}))}function o(e){e.preventDefault(),e.stopPropagation()}function s(e){e.currentTarget.classList.add("highlight")}function i(e){e.currentTarget.classList.remove("highlight")}function a(e){var t=$(e).parent().attr("data-input");return $(e).parents(".upload").find("[data-result='"+t+"']")}function r(e){var n=e.dataTransfer.files,o=e.currentTarget.querySelector("input");o.files&&o.files[0]&&(o.value="",/safari/i.test(navigator.userAgent)||(o.type="",o.type="file")),o.files=n,function(e){t(e)}(o)}function l(e){var t,n,o=$(e.currentTarget),s=o.parents(".upload__result"),i=s.attr("data-result"),a=s.parents(".upload").find("[data-input='"+i+"']"),r=a.children("input")[0];o.parents(".upload").hasClass("multi")?(n=i,(t=s).parents(".upload").find(".upload__label").each((function(e,t){if(e>n){var o=e-1;$(this).attr("data-input",o),$(this).children("input").attr("name","file-"+o)}else $(this).attr("data-input",e),$(this).children("input").attr("name","file-"+e)})),t.parents(".upload").find(".upload__result").each((function(e,t){e>n?$(this).attr("data-result",e-1):$(this).attr("data-result",e)})),s.remove(),a.remove()):(r.value="",/safari/i.test(navigator.userAgent)||(r.type="",r.type="file"),a.removeClass("hidden"),s.removeClass("show"))}function c(e,t){var a=e.children("input")[0],c=e[0],d=t.find(".upload__close")[0];["dragenter","dragover","dragleave","drop"].forEach((function(e){c.addEventListener(e,o,!1)})),["dragenter","dragover"].forEach((function(e){c.addEventListener(e,s,!1)})),["dragleave","drop"].forEach((function(e){c.addEventListener(e,i,!1)})),c.addEventListener("drop",r,!1),a.addEventListener("change",n),d.addEventListener("click",l)}}(),function(){$("<div/>",{class:"preloader"}).css({position:"fixed",top:"0",left:"0",width:"100vw",height:"100vh","background-color":"#fff","z-index":"3000"}).appendTo("html");var e=function(e){e.target.value.length>0?$(e.target).addClass("inputed"):$(e.target).removeClass("inputed")};$(document).ready((function(){$(".js-select-combo").select2({placeholder:"Введите или выберите вариант",dropdownCssClass:"select-dropdown",language:{noResults:function(){return"Ничего не найдено"},searching:function(){return"Загрузка..."}}}),$(".js-select-combo").on("select2:open",(function(){$(".select2-search input").off("input",e),$(".select2-search input").on("input",e)})),$(".js-select-combo").on("select2:closing",(function(){$(".select2-search input").removeClass("inputed")})),$(".js-select-combo-open").select2({placeholder:"Введите или выберите вариант",dropdownCssClass:["select-dropdown","select-dropdown-multi","select-dropdown--opened"],language:{noResults:function(){return"Ничего не найдено"},searching:function(){return"Загрузка..."}}}).on("select2:closing",(function(e){e.preventDefault()})).on("select2:closed",(function(e){n.select2("open")})),$(".js-select-combo-open").select2("open"),$(".select-dropdown-multi input").on("input",e),$(".js-select-combo-searching").select2({placeholder:"Введите или выберите вариант",dropdownCssClass:["select-dropdown","select-dropdown--opened","select-dropdown--searching"],language:{noResults:function(){return"Ничего не найдено"},searching:function(){return"Загрузка..."}},ajax:{delay:5e8,url:"https://antibreez.github.io/select-data/select-data.json"}}).on("select2:closing",(function(e){e.preventDefault()})).on("select2:closed",(function(e){n.select2("open")}));var t=new Event("input",{bubbles:!0,cancelable:!0});$(".js-select-combo-searching").select2("open"),setTimeout((function(){$(".select-dropdown--searching input")[0]&&$(".select-dropdown--searching input")[0].dispatchEvent(t)}),500),$(".js-select-combo-not-found").select2({dropdownCssClass:["select-dropdown","select-dropdown--opened","select-dropdown--not-found"],language:{noResults:function(){return"Ничего не найдено"},searching:function(){return"Загрузка..."}}}).on("select2:closing",(function(e){e.preventDefault()})).on("select2:closed",(function(e){n.select2("open")})),$(".js-select-combo-not-found").select2("open"),$(".select-dropdown--not-found input").val("фывапа"),$(".select-dropdown--not-found input")[0]&&$(".select-dropdown--not-found input")[0].dispatchEvent(t),$(".js-select-single").select2({placeholder:"Выберите вариант",minimumResultsForSearch:1/0,dropdownCssClass:["select-dropdown","select-dropdown--single"]});var n=$(".js-select-single-open").select2({placeholder:"Выберите вариант",minimumResultsForSearch:1/0,dropdownCssClass:["select-dropdown","select-dropdown--single","select-dropdown--opened"],closeOnSelect:!1}).on("select2:closing",(function(e){e.preventDefault()})).on("select2:closed",(function(e){n.select2("open")}));n.select2("open"),$(".js-select-multi").select2({placeholder:"Выберите варианты",dropdownCssClass:["select-dropdown","select-dropdown-multi"],language:{noResults:function(){return"Ничего не найдено"},searching:function(){return"Загрузка..."}}}),$(".js-select-multi").on("select2:open",(function(){$(".select2-search input").off("input",e),$(".select2-search input").on("input",e)})),$(".js-select-multi").on("select2:closing",(function(){$(".select2-search input").removeClass("inputed")})),$(".js-select-multi-open").select2({placeholder:"Выберите варианты",maximumSelectionLength:3,dropdownCssClass:["select-dropdown","select-dropdown--opened","select-dropdown-multi"],language:{noResults:function(){return"Ничего не найдено"},searching:function(){return"Загрузка..."},maximumSelected:function(e){return"Макс. количество вариантов - "+e.maximum}}}).on("select2:closing",(function(e){e.preventDefault()})).on("select2:closed",(function(e){n.select2("open")})),$(".js-select-multi-open").select2("open"),$(".js-select-multi-searching").select2({placeholder:"Выберите варианты",dropdownCssClass:["select-dropdown","select-dropdown--opened","select-dropdown--searching-multi"],language:{noResults:function(){return"Ничего не найдено"},searching:function(){return"Загрузка..."}},ajax:{delay:5e8,url:"https://antibreez.github.io/select-data/select-data.json"}}).on("select2:closing",(function(e){e.preventDefault()})).on("select2:closed",(function(e){n.select2("open")}));t=new Event("input",{bubbles:!0,cancelable:!0});$(".js-select-multi-searching").select2("open"),setTimeout((function(){$(".select-dropdown--searching-multi  input")[0]&&$(".select-dropdown--searching-multi  input")[0].dispatchEvent(t)}),500),$(".js-select-multi-not-found").select2({dropdownCssClass:["select-dropdown","select-dropdown--opened","select-dropdown--not-found-multi"],language:{noResults:function(){return"Ничего не найдено"},searching:function(){return"Загрузка..."}}}).on("select2:closing",(function(e){e.preventDefault()})).on("select2:closed",(function(e){n.select2("open")})),$(".js-select-multi-not-found").select2("open"),$(".select-dropdown--not-found-multi input").val("фывапа"),$(".select-dropdown--not-found-multi input")[0]&&$(".select-dropdown--not-found-multi input")[0].dispatchEvent(t)})),setTimeout((function(){window.scrollTo(0,0),$(".preloader").hide()}),500)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
